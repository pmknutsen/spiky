##Analysis
Analysis functions are grouped as functions that process either continuous (analog) or discrete
(digital) signals. These are placed in the `/continuous` or `/discrete` folders, respectively.

You may add your own analysis functions by copying these into one of these two directories.
These functions can then be accessed via the menu from within Spiky.

Analysis functions should adhere to the following formatting.

##Output arguments
Analysis functions can return 0 or 1 output arguments.

Examples:

`MYAnalysis()`

`S = MYAnalysis()`
where S is a structure that minimally contains the following fields.

PRE

PRE_KHz: 40
PRE_KHz_Orig: 40
PRE_TimeBegin: 49431
PRE_TimeEnd: 49461


VAR is any arbitrary output. Spiky does not process the output in any way.

`[C, FS] = MYAnalysis()`
where C is a continuous signal (vector or two-dimensional matrix) with sampling rate FS.

When two output arguments are returned, Spiky will insert the 

##Running Spiky sub-routines
You can access any of the Spiky sub-routines from within an analysis function by loading the
global variable `Spiky` into the local workspace:

`global Spiky`

You can then run any sub-routine with the syntax:

`Spiky.SubRoutine()`

##Accessing the Spiky data structure
Load the current Spiky data structure with the command:

`[FV,hWin] = Spiky.GetStruct();`
